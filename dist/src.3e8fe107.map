{"version":3,"sources":["helpers/generateUUID.ts","helpers/Signal.ts","../node_modules/three/build/three.module.js","amjs/camera/CameraFactory.ts","amjs/camera/CameraManager.ts","amjs/AMJS.ts","index.ts"],"names":["exports","__esModule","generateUUID","replace","c","r","Math","random","v","toString","Signal","_handlers","prototype","connect","handler","push","disconnect","filter","h","emit","data","slice","forEach","Number","EPSILON","undefined","pow","isInteger","value","isFinite","floor","sign","x","Function","Object","defineProperty","get","match","assign","target","TypeError","output","index","arguments","length","source","nextKey","hasOwnProperty","call","EventDispatcher","addEventListener","type","listener","_listeners","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","i","l","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","_Math","DEG2RAD","PI","RAD2DEG","lut","d0","d1","d2","d3","uuid","toUpperCase","clamp","min","max","euclideanModulo","n","m","mapLinear","a1","a2","b1","b2","lerp","y","t","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","Vector2","defineProperties","set","isVector2","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","constructor","copy","add","w","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","cos","sin","Matrix4","error","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","z","extractRotation","Vector3","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","d","f","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","zero","one","q","compose","lookAt","eye","up","crossVectors","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","getZ","applyMatrix4","setXYZ","determinant","transpose","tmp","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","position","quaternion","_x","_y","_z","_w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","decompose","vector","matrix","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","left","right","top","bottom","near","far","makeOrthographic","p","Quaternion","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","onChangeCallback","setFromEuler","update","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","EPS","vFrom","vTo","angleTo","acos","rotateTowards","step","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","projectionMatrix","matrixWorld","unproject","transformDirection","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromCylindrical","setFromMatrixPosition","setFromMatrixScale","Matrix3","isMatrix3","setFromMatrix4","g","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","rotation","cx","cy","rotate","translate","ImageUtils","getDataURL","image","canvas","HTMLCanvasElement","OffscreenCanvas","width","height","document","createElementNS","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","name","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","create","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","wrap","images","url","Array","isArray","dispose","transformUv","uv","Vector4","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","getW","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","isWebGLRenderTarget","setSize","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","isWebGLRenderTargetCube","DataTexture","isDataTexture","Box3","Infinity","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","object","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","traverse","node","geometry","isGeometry","vertices","isBufferGeometry","attributes","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","closestPoint","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","j","p0","p1","p2","triangle","distanceToPoint","clampedPoint","getBoundingSphere","Sphere","intersect","union","xax","xay","xaz","xbx","xby","xbz","yax","yay","yaz","ybx","yby","ybz","zax","zay","zaz","zbx","zby","zbz","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","Plane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","start","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","Frustum","p3","p4","p5","planes","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","distance","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderChunk","UniformsUtils","merge","uniforms","merged","u","uniforms_src","uniforms_dst","parameter_src","isColor","ColorKeywords","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","style","handleAlpha","string","parseFloat","exec","color","components","parseInt","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","hsl","addColors","color1","color2","UniformsLib","diffuse","opacity","map","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","depth","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","physical","clearCoat","clearCoatRoughness","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","frame","requestAnimationFrame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","createBuffer","bufferType","usage","dynamic","DYNAMIC_DRAW","STATIC_DRAW","buffer","bindBuffer","bufferData","onUploadCallback","FLOAT","Float32Array","Float64Array","Uint16Array","UNSIGNED_SHORT","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","isInterleavedBufferAttribute","remove","deleteBuffer","delete","Euler","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Layers","mask","channel","enable","toggle","disable","test","layers","object3DId","Object3D","parent","children","DefaultUp","onRotationChange","onQuaternionChange","enumerable","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","geometries","materials","shapes","JSON","stringify","serialize","library","element","isMesh","isLine","isPoints","parameters","shape","material","uuids","extractFromCache","cache","values","key","recursive","parse","Camera","matrixWorldInverse","OrthographicCamera","zoom","view","updateProjectionMatrix","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","zoomW","zoomH","scaleW","scaleH","Face3","materialIndex","vertexNormals","vertexColors","geometryId","Geometry","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","face","jl","computeBoundingBox","obj","fromBufferGeometry","indices","positions","normals","uvs","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","materialIndexSort","sort","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","hash","k","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","BufferAttribute","itemSize","normalized","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","arrayMax","bufferGeometryId","BufferGeometry","morphAttributes","drawRange","getIndex","setIndex","addAttribute","getAttribute","removeAttribute","addGroup","clearGroups","setDrawRange","needsUpdate","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","isNaN","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","geometry2","array2","keys","morphAttribute","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","materialId","Material","blending","side","flatShading","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","overdraw","isMaterial","onBeforeCompile","setValues","newValue","currentValue","isRoot","emissiveIntensity","normalMapType","sizeAttenuation","linewidth","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","srcPlanes","dstPlanes","MeshBasicMaterial","combine","isMeshBasicMaterial","ShaderMaterial","defines","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","isShaderMaterial","Ray","origin","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","vab","vac","vbc","vap","vbp","vcp","d4","vc","d5","d6","vb","va","Mesh","drawMode","updateMorphTargets","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","String","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","WebGLBackground","renderer","state","objects","clearColor","clearAlpha","planeCamera","planeMesh","boxMesh","render","renderList","scene","forceClear","background","setClear","autoClear","clear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","renderBufferDirect","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBufferRenderer","info","capabilities","mode","setMode","drawArrays","renderInstances","extension","isWebGL2","maxInstancedCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","fromCache","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","memory","_bufferGeometry","geometryAttributes","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","getWireframeAttribute","geometryIndex","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","LINE_STRIP","LINE_LOOP","POINTS","reset","programs","autoReset","absNumericalSort","WebGLMorphtargets","influencesList","program","objectInfluences","influences","getUniforms","setValue","WebGLObjects","updateList","CubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocTextureUnit","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2f","uniform2fv","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4f","uniform4fv","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","updateCache","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","addLineNumbers","split","join","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","generateExtensions","rendererExtensions","chunks","envMapCubeUV","objectSpaceNormalMap","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","pattern","include","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","trim","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","getAttributes","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","allocateBones","skeleton","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","currentRenderTarget","getRenderTarget","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","pop","WebGLProperties","painterSortStable","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","renderItem","WebGLRenderLists","lists","list","UniformsCache","light","halfWidth","halfHeight","WebGLLights","stateID","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","shadowsLength","ambient","vector3","matrix42","setup","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","WebGLShadowMap","_renderer","_objects","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","autoUpdate","_gl","_state","BLEND","setTest","setScissorTest","faceCount","shadowCamera","vpWidth","vpHeight","pars","isSpotLightShadow","shadowMatrix","setRenderTarget","vpDimensions","renderObject","getDepthMaterial","lightPositionWorld","result","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","cachedMaterial","WebGLState","utils","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","colorBuffer","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","enabledCapabilities","compressedTextureFormats","currentProgram","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","setBlending","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","getCompressedTextureFormats","formats","COMPRESSED_TEXTURE_FORMATS","useProgram","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","SRC_COLOR","convert","setMaterial","frontFaceCW","setPolygonOffset","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","compressedTexImage2D","apply","WebGLTextures","_videoTextures","_canvas","clampToMaxSize","maxSize","makePowerOfTwo","HTMLImageElement","ImageBitmap","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","generateMipmap","textureProperties","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","RGB","RGB32F","HALF_FLOAT","RGB16F","RGB8","RGBA32F","RGBA16F","RGBA8","filterFallback","LINEAR","onTextureDispose","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTarget","deallocateRenderTarget","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","updateVideoTexture","__version","complete","uploadTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","cubeImage","isPowerOfTwoImage","glInternalFormat","setTextureParameters","mipmap","setTextureCubeDynamic","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","CLAMP_TO_EDGE","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","WebGLUtils","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN","MAX","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","Group","isGroup","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","skew","ArrayCamera","cameras","isArrayCamera","WebVRManager","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","window","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraL","bounds","cameraR","cameraVR","isPresenting","currentSize","currentPixelRatio","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","animation","triggers","findGamepad","gamepads","navigator","getGamepads","gamepad","startsWith","updateControllers","controller","pose","hasPosition","orientation","buttonId","buttons","pressed","userHeight","getController","getDevice","setDevice","setPoseTarget","getCamera","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","poseObject","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebXRManager","session","frameOfRef","inputSources","XRDevice","setCompatibleXRDevice","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","setSession","baseLayer","XRWebGLLayer","requestFrameOfReference","frameOfReferenceType","then","getInputSources","updateCamera","onAnimationFrameCallback","getDevicePose","views","getViewport","getViewMatrix","inputPose","getInputPose","pointerMatrix","THREE","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","_this","_isContextLost","_framebuffer","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","vr","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","vertexAttribPointer","normalArray","uvArray","colorArray","setProgram","updateBuffers","rangeFactor","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","compile","isLight","initMaterial","projectObject","opaqueObjects","transparentObjects","overrideMaterial","renderObjects","isImmediateRenderObject","camera2","materialProperties","lightsHash","lightsStateHash","programChange","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","isFog","density","textureUnit","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","Scene","InterleavedBuffer","isInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","Sprite","float32Array","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","LOD","levels","addLevel","getObjectForDistance","matrixPosition","Skeleton","boneInverses","calculateInverses","bone","isBone","offsetMatrix","identityMatrix","getBoneByName","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","bind","normalizeSkinWeights","gbone","pos","rotq","scl","sw","vec","skinWeight","linecap","linejoin","Line","computeLineDistances","positionAttribute","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","distSq","nbVertices","LineSegments","LineLoop","Points","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","VideoTexture","video","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","isCanvasTexture","DepthTexture","WireframeGeometry","o","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivide","appplyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","P","generateBufferData","generateSegment","generateIndices","getPointAt","N","B","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","invSize","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","prev","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","nextZ","prevZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","mx","my","tanMin","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","px","py","intersectsPolygon","middleInside","q2","inside","Node","an","bp","sum","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","ahole","hl","shapePoints","extractPoints","reverse","concat","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","toJSON$1","shapeHole","indexOffset","shapeVertices","shapeHoles","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","Materials","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","DefaultLoadingManager","loading","FileLoader","manager","load","cached","setTimeout","dataUriRegex","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","toLowerCase","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","open","callbacks","status","withCredentials","overrideMimeType","header","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","CompressedTextureLoader","_parser","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","DataTextureLoader","texData","ImageLoader","crossOrigin","onImageLoad","onImageError","substr","src","setCrossOrigin","CubeTextureLoader","urls","TextureLoader","isJPEG","search","Curve","arcLengthDivisions","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","fromJSON","json","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","weight","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","tangent","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","resolution","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","getPointsHoles","holesPts","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","track","trackType","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","shift","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","tracks","resetDuration","getTrackTypeForValueTypeName","typeName","parseKeyframeTrack","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","MaterialLoader","setTextures","getTexture","shading","BufferGeometryLoader","typedArray","TYPED_ARRAYS","drawcalls","offsets","Loader","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","lastIndexOf","JSONLoader","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","ObjectLoader","substring","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","details","geometryShapes","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","ImageBitmapLoader","createImageBitmap","fetch","setOptions","res","blob","imageBitmap","catch","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","Font","paths","createPaths","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","ha","FontLoader","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","StereoCamera","eyeSep","instance","eyeRight","eyeLeft","eyeSepOnProjection","ymax","xmin","xmax","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","gain","createGain","destination","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","setValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","pause","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","PositionalAudio","panner","createPanner","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","RESERVED_CHARS_RE","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","findNode","nodeName","root","isAnimationObjectGroup","sanitizeNodeName","reservedRe","RegExp","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","getValue_direct","getValue_array","resolvedProperty","getValue_arrayElement","getValue_toArray","SetterByBindingTypeAndVersioning","setValue_direct","targetObject","setValue_direct_setNeedsUpdate","setValue_direct_setMatrixWorldNeedsUpdate","setValue_array","dest","setValue_array_setNeedsUpdate","setValue_array_setMatrixWorldNeedsUpdate","setValue_arrayElement","setValue_arrayElement_setNeedsUpdate","setValue_arrayElement_setMatrixWorldNeedsUpdate","setValue_fromArray","setValue_fromArray_setNeedsUpdate","setValue_fromArray_setMatrixWorldNeedsUpdate","getValue_unbound","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedBufferGeometry","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","setFromCamera","coords","intersectObjects","Clock","autoStart","oldTime","elapsedTime","running","performance","Date","getElapsedTime","getDelta","newTime","Spherical","other","makeSafe","vec3","Cylindrical","Box2","Line3","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","objPos","objNorm","SpotLightHelper","cone","coneLength","coneWidth","getBoneList","boneList","SkeletonHelper","boneMatrix","matrixWorldInv","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","BoxHelper","Box3Helper","PlaneHelper","positions2","lineGeometry","coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","Face4","LineStrip","LinePieces","MeshFaceMaterial","MultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","ClosedSplineCurve3","SplineCurve3","Spline","initFromArray","getControlPointsArray","reparametrizeByArcLength","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","XHRLoader","BinaryTextureLoader","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","wrapRGB","metal","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","audioLoader","getData","updateCubeMap","GeometryUtils","geometry1","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","SceneUtils","createMultiMaterialObject","detach","attach","LensFlare","CubeGeometry","require","CameraFactory","createPerspectiveCamera","offsetWidth","offsetHeight","createOrthographicCamera","CameraFactory_1","CAMERA_TYPES","CameraManager","application","debug","getUUID","_application","_camera","setCameraType","_a","cameraTypeToFactoryMap","ORTHOGRAPHIC","PERSPECTIVE","getCanvas","generateUUID_1","Signal_1","CameraManager_1","AMJS","_UUID","_config","onReady","setCanvas","_cameraManager","success","getConfig","getCameraManager","AMJS_1","getElementById","amjs"],"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","file":"src.3e8fe107.map","sourceRoot":"../src","sourcesContent":["\"use strict\";\n// Copyright (c) 2018 Chris ter Beke\n// am.js is open source under the terms of LGPLv3 or higher\nexports.__esModule = true;\n/**\n * Generates a Unique ID.\n */\nvar generateUUID = function () {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n};\nexports[\"default\"] = generateUUID;\n","'use strict';\nexports.__esModule = true;\n/**\n * Event based callback handler.\n */\nvar Signal = /** @class */ (function () {\n    function Signal() {\n        // registered callback handlers\n        this._handlers = [];\n    }\n    /**\n     * Connect a callback method to fire when the event occurs.\n     * @param handler The callback.\n     */\n    Signal.prototype.connect = function (handler) {\n        this._handlers.push(handler);\n    };\n    /**\n     * Disconnect a callback method.\n     * @param handler The callback.\n     */\n    Signal.prototype.disconnect = function (handler) {\n        this._handlers = this._handlers.filter(function (h) { return h !== handler; });\n    };\n    /**\n     * Emit the event to the registered callback handlers.\n     * @param data The data to emit.\n     */\n    Signal.prototype.emit = function (data) {\n        this._handlers.slice(0).forEach(function (h) { return h(data); });\n    };\n    return Signal;\n}());\nexports[\"default\"] = Signal;\n","// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '95';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tcross: function ( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t        te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t        te[ 1 ] = ( xy + wz ) * sx;\n\t        te[ 2 ] = ( xz - wy ) * sx;\n\t        te[ 3 ] = 0;\n\n\t        te[ 4 ] = ( xy - wz ) * sy;\n\t        te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t        te[ 6 ] = ( yz + wx ) * sy;\n\t        te[ 7 ] = 0;\n\n\t        te[ 8 ] = ( xz + wy ) * sz;\n\t        te[ 9 ] = ( yz - wx ) * sz;\n\t        te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t        te[ 11 ] = 0;\n\n\t        te[ 12 ] = position.x;\n\t        te[ 13 ] = position.y;\n\t        te[ 14 ] = position.z;\n\t        te[ 15 ] = 1;\n\n\t        return this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function project( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\tthis.y = c.y;\n\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar ImageUtils = {\n\n\tgetDataURL: function ( image ) {\n\n\t\tvar canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( typeof OffscreenCanvas !== 'undefined' ) {\n\n\t\t\t\tcanvas = new OffscreenCanvas( image.width, image.height );\n\n\t\t\t} else {\n\n\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\n\t\t\t}\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : true;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\ttarget = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty( ) ) return this;\n\n\t\tvar m = matrix.elements;\n\n\t\tvar xax = m[ 0 ] * this.min.x, xay = m[ 1 ] * this.min.x, xaz = m[ 2 ] * this.min.x;\n\t\tvar xbx = m[ 0 ] * this.max.x, xby = m[ 1 ] * this.max.x, xbz = m[ 2 ] * this.max.x;\n\t\tvar yax = m[ 4 ] * this.min.y, yay = m[ 5 ] * this.min.y, yaz = m[ 6 ] * this.min.y;\n\t\tvar ybx = m[ 4 ] * this.max.y, yby = m[ 5 ] * this.max.y, ybz = m[ 6 ] * this.max.y;\n\t\tvar zax = m[ 8 ] * this.min.z, zay = m[ 9 ] * this.min.z, zaz = m[ 10 ] * this.min.z;\n\t\tvar zbx = m[ 8 ] * this.max.z, zby = m[ 9 ] * this.max.z, zbz = m[ 10 ] * this.max.z;\n\n\t\tthis.min.x = Math.min( xax, xbx ) + Math.min( yax, ybx ) + Math.min( zax, zbx ) + m[ 12 ];\n\t\tthis.min.y = Math.min( xay, xby ) + Math.min( yay, yby ) + Math.min( zay, zby ) + m[ 13 ];\n\t\tthis.min.z = Math.min( xaz, xbz ) + Math.min( yaz, ybz ) + Math.min( zaz, zbz ) + m[ 14 ];\n\t\tthis.max.x = Math.max( xax, xbx ) + Math.max( yax, ybx ) + Math.max( zax, zbx ) + m[ 12 ];\n\t\tthis.max.y = Math.max( xay, xby ) + Math.max( yay, yby ) + Math.max( zay, zby ) + m[ 13 ];\n\t\tthis.max.z = Math.max( xaz, xbz ) + Math.max( yaz, ybz ) + Math.max( zaz, zbz ) + m[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\tp.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( p ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\n\nvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tvec4 mvPosition;\\n\\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert,\n\tsprite_frag: sprite_frag,\n\tsprite_vert: sprite_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function () {\n\n\t\tfunction SRGBToLinear( c ) {\n\n\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t}\n\n\t\treturn function copySRGBToLinear( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopyLinearToSRGB: function () {\n\n\t\tfunction LinearToSRGB( c ) {\n\n\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t\t}\n\n\t\treturn function copyLinearToSRGB( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\tvar m1 = new Matrix4();\n\t\tvar vector = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tvector.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\tthis.projectionMatrix = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tvar tempNormals = [];\n\t\tvar tempUVs = [];\n\t\tvar tempUVs2 = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\t\tvar groups = this.groups;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.overdraw = source.overdraw;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = this.uniforms;\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar vab = new Vector3();\n\t\tvar vac = new Vector3();\n\t\tvar vbc = new Vector3();\n\t\tvar vap = new Vector3();\n\t\tvar vbp = new Vector3();\n\t\tvar vcp = new Vector3();\n\n\t\treturn function closestPointToPoint( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\tvab.subVectors( b, a );\n\t\t\tvac.subVectors( c, a );\n\t\t\tvap.subVectors( p, a );\n\t\t\tvar d1 = vab.dot( vap );\n\t\t\tvar d2 = vac.dot( vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\tvbp.subVectors( p, b );\n\t\t\tvar d3 = vab.dot( vbp );\n\t\t\tvar d4 = vac.dot( vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( vab, v );\n\n\t\t\t}\n\n\t\t\tvcp.subVectors( p, c );\n\t\t\tvar d5 = vab.dot( vcp );\n\t\t\tvar d6 = vac.dot( vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\tvbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy( a ).addScaledVector( vab, v ).addScaledVector( vac, w );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar barycoord = new Vector3();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\tTriangle.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\treturn uv1.clone();\n\n\t\t}\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeCamera, planeMesh;\n\tvar boxMesh;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\n\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t);\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.map = background;\n\n\t\t\t// TODO Push this to renderList\n\n\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawArraysInstanced' : 'drawArraysInstancedANGLE' ]( mode, start, count, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext;\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tvar attribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension;\n\n\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\textension = gl;\n\n\t\t} else {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ capabilities.isWebGL2 ? 'drawElementsInstanced' : 'drawElementsInstancedANGLE' ]( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.TRIANGLE_STRIP:\n\t\t\tcase gl.TRIANGLE_FAN:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1fv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 2 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform2fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 3 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform3fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform4fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 9 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 16 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value, renderer ) {\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ], renderer );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = capabilities.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && ( capabilities.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && ( capabilities.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( capabilities.isWebGL2 && ! material.isRawShaderMaterial ) {\n\n\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\tif ( material.isShaderMaterial &&\n\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t}\n\n\t\t// GLSL 3.0 conversion\n\t\tprefixVertex = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#version 300 es\\n',\n\t\t\t'#define varying in',\n\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters, capabilities );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\trenderItemsIndex ++;\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\t\tvar list = lists[ hash ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ hash ] = list;\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar count = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tid: count ++,\n\n\t\thash: {\n\t\t\tstateID: - 1,\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\t\t\tshadowsLength: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\tstate.hash.stateID = state.id;\n\t\tstate.hash.directionalLength = directionalLength;\n\t\tstate.hash.pointLength = pointLength;\n\t\tstate.hash.spotLength = spotLength;\n\t\tstate.hash.rectAreaLength = rectAreaLength;\n\t\tstate.hash.hemiLength = hemiLength;\n\t\tstate.hash.shadowsLength = shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar renderState;\n\n\t\tif ( renderStates[ scene.id ] === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ scene.id ] = {};\n\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t} else {\n\n\t\t\tif ( renderStates[ scene.id ][ camera.id ] === undefined ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates[ scene.id ][ camera.id ] = renderState;\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStates[ scene.id ][ camera.id ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\t// TODO Clean up (needed in case of contextlost)\n\t\tvar _gl = _renderer.context;\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( _gl.BLEND );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils, capabilities ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar enabledCapabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tenable( gl.BLEND );\n\tsetBlending( NormalBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending !== NoBlending ) {\n\n\t\t\tenable( gl.BLEND );\n\n\t\t} else {\n\n\t\t\tdisable( gl.BLEND );\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\tcase AdditiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase SubtractiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MultiplyBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t} else {\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tenabledCapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tif ( 'data' in image ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\n\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height );\n\n\t\t\treturn _canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( capabilities.isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\tfunction getInternalFormat( glFormat, glType ) {\n\n\t\tif ( ! capabilities.isWebGL2 ) return glFormat;\n\n\t\tif ( glFormat === _gl.RGB ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) return _gl.RGB32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) return _gl.RGB16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) return _gl.RGB8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) return _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) return _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) return _gl.RGBA8;\n\n\t\t}\n\n\t\treturn glFormat;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type ),\n\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! capabilities.isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\tgenerateMipmap( _gl.TEXTURE_2D, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\n\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\n\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\n\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\tif ( p === OneFactor ) return gl.ONE;\n\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\n\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tif ( p === MinEquation ) return gl.MIN;\n\t\t\t\tif ( p === MaxEquation ) return gl.MAX;\n\n\t\t\t}\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan(\n\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\tanimation.start();\n\n\t\t} else if ( scope.enabled ) {\n\n\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar triggers = [];\n\n\tfunction findGamepad( id ) {\n\n\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateControllers() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t//  Pose\n\n\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t//  Trigger\n\n\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\tif ( triggers[ i ] === true ) {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\tthis.userHeight = 1.6;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( device === null ) {\n\n\t\t\tcamera.position.set( 0, scope.userHeight, 0 );\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tvar stageParameters = device.stageParameters;\n\n\t\tif ( stageParameters ) {\n\n\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t} else {\n\n\t\t\tstandingMatrix.makeTranslation( 0, scope.userHeight, 0 );\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t// HACK (mrdoob)\n\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateControllers();\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer ) {\n\n\tvar gl = renderer.context;\n\n\tvar device = null;\n\tvar session = null;\n\n\tvar frameOfRef = null;\n\n\tvar pose = null;\n\n\tvar controllers = [];\n\tvar inputSources = [];\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && frameOfRef !== null;\n\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\t\tif ( value instanceof XRDevice ) gl.setCompatibleXRDevice( value );\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tvar controller = controllers[ inputSources.indexOf( event.inputSource ) ];\n\t\tif ( controller ) controller.dispatchEvent( { type: event.type } );\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\trenderer.setFramebuffer( null );\n\t\tanimation.stop();\n\n\t}\n\n\tthis.setSession = function ( value, options ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl );\n\t\t\tsession.requestFrameOfReference( options.frameOfReferenceType ).then( function ( value ) {\n\n\t\t\t\tframeOfRef = value;\n\n\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t} );\n\n\t\t\t//\n\n\t\t\tinputSources = session.getInputSources();\n\n\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\tinputSources = session.getInputSources();\n\t\t\t\tconsole.log( inputSources );\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\t// apply camera.parent to cameraVR\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t}\n\n\t\treturn camera;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getDevicePose( frameOfRef );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar layer = session.baseLayer;\n\t\t\tvar views = frame.views;\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = layer.getViewport( view );\n\t\t\t\tvar viewMatrix = pose.getViewMatrix( view );\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t// HACK (mrdoob)\n\t\t\t\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\t\t\t\tcameraVR.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tvar inputPose = frame.getInputPose( inputSource, frameOfRef );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\tcontroller.matrix.elements = inputPose.pointerMatrix;\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = false;\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new THREE.Matrix4();\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\n\t\t// geometry and program caching\n\n\t\t_currentGeometryProgram = {\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false\n\t\t},\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tif ( ! capabilities.isWebGL2 ) {\n\n\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\textensions.get( 'OES_texture_float' );\n\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t}\n\n\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\tstate = new WebGLState( _gl, extensions, utils, capabilities );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function () {\n\n\t\treturn _currentViewport;\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.normalMatrix.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\n\t\t\t_currentGeometryProgram.program !== program.id ||\n\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\n\n\t\t\t_currentGeometryProgram.geometry = geometry.id;\n\t\t\t_currentGeometryProgram.program = program.id;\n\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t} else if ( object.isSprite ) {\n\n\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry & ! capabilities.isWebGL2 ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( vr.isPresenting() ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram.geometry = null;\n\t\t_currentGeometryProgram.program = null;\n\t\t_currentGeometryProgram.wireframe = false;\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t/*\n\t// TODO Duplicated code (Frustum)\n\n\tvar _sphere = new Sphere();\n\n\tfunction isObjectViewable( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null )\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).\n\t\tapplyMatrix4( object.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSpriteViewable( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSphereViewable( sphere ) {\n\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\tif ( numPlanes === 0 ) return true;\n\n\t\tvar planes = _this.clippingPlanes,\n\n\t\t\tcenter = sphere.center,\n\t\t\tnegRad = - sphere.radius,\n\t\t\ti = 0;\n\n\t\tdo {\n\n\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t} while ( ++ i !== numPlanes );\n\n\t\treturn true;\n\n\t}\n\t*/\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t_currentGeometryProgram.program = null;\n\t\t\t_currentGeometryProgram.wireframe = false;\n\n\t\t\trenderObjectImmediate( object, program );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) {\n\n\t\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\t// Computing code again as onBeforeCompile may have changed the shaders\n\t\t\tcode = programCache.getProgramCode( material, parameters );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\t\tif ( lightsHash === undefined ) {\n\n\t\t\tmaterialProperties.lightsHash = lightsHash = {};\n\n\t\t}\n\n\t\tlightsHash.stateID = lightsStateHash.stateID;\n\t\tlightsHash.directionalLength = lightsStateHash.directionalLength;\n\t\tlightsHash.pointLength = lightsStateHash.pointLength;\n\t\tlightsHash.spotLength = lightsStateHash.spotLength;\n\t\tlightsHash.rectAreaLength = lightsStateHash.rectAreaLength;\n\t\tlightsHash.hemiLength = lightsStateHash.hemiLength;\n\t\tlightsHash.shadowsLength = lightsStateHash.shadowsLength;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tvar lightsHash = materialProperties.lightsHash;\n\t\tvar lightsStateHash = lights.state.hash;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && ( lightsHash.stateID !== lightsStateHash.stateID ||\n\t\t\t\tlightsHash.directionalLength !== lightsStateHash.directionalLength ||\n\t\t\t\tlightsHash.pointLength !== lightsStateHash.pointLength ||\n\t\t\t\tlightsHash.spotLength !== lightsStateHash.spotLength ||\n\t\t\t\tlightsHash.rectAreaLength !== lightsStateHash.rectAreaLength ||\n\t\t\t\tlightsHash.hemiLength !== lightsStateHash.hemiLength ||\n\t\t\t\tlightsHash.shadowsLength !== lightsStateHash.shadowsLength ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\t//\n\n\tthis.setFramebuffer = function ( value ) {\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\tthis.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\tthis.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color, this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color, this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2()\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.lights = false;\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar geometry;\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tif ( geometry === undefined ) {\n\n\t\tgeometry = new BufferGeometry();\n\n\t\tvar float32Array = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t] );\n\n\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\tgeometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\tgeometry.addAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\tgeometry.addAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t}\n\n\tthis.geometry = geometry;\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldScale = new Vector3();\n\t\tvar mvPosition = new Vector3();\n\n\t\tvar alignedPosition = new Vector2();\n\t\tvar rotatedPosition = new Vector2();\n\t\tvar viewWorldMatrix = new Matrix4();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t\t// compute position in camera space\n\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t\t// to check if rotation is not zero\n\t\t\tif ( sin !== undefined ) {\n\n\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\n\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\n\n\t\t\t} else {\n\n\t\t\t\trotatedPosition.copy( alignedPosition );\n\n\t\t\t}\n\n\n\t\t\tvertexPosition.copy( mvPosition );\n\t\t\tvertexPosition.x += rotatedPosition.x;\n\t\t\tvertexPosition.y += rotatedPosition.y;\n\n\t\t\t// transform to world space\n\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\n\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n\tvar bones = this.initBones();\n\tvar skeleton = new Skeleton( bones );\n\n\tthis.bind( skeleton, this.matrixWorld );\n\n\tthis.normalizeSkinWeights();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tinitBones: function () {\n\n\t\tvar bones = [], bone, gbone;\n\t\tvar i, il;\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone();\n\t\t\t\tbones.push( bone );\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn bones;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar scale, i;\n\n\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tscale = 1.0 / sw.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\tvar vec = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tscale = 1.0 / vec.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\t\t\tvar precisionSq = precision * precision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n}\n\n// Static methods\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tvar times = [], values = [];\n\n\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\t// Merges multi-byte utf-8 characters.\n\t\treturn decodeURIComponent( escape( s ) );\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === 'string' ) ? this.texturePath : LoaderUtils.extractUrlBase( url );\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\t\treturn this;\n\n\t},\n\n\tparse: ( function () {\n\n\t\tfunction parseModel( json, geometry ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tscale = json.scale,\n\n\t\t\t\tnUvLayers = 0;\n\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\tvar scale = json.scale;\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\treturn function parse( json, texturePath ) {\n\n\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t// Geometry 4.0 spec\n\t\t\t\tjson = json.data;\n\n\t\t\t}\n\n\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t} else {\n\n\t\t\t\tjson.scale = 1.0;\n\n\t\t\t}\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tparseModel( json, geometry );\n\t\t\tparseSkin( json, geometry );\n\t\t\tparseMorphing( json, geometry );\n\t\t\tparseAnimations( json, geometry );\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.texturePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.texturePath === '' ) {\n\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.texturePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t} );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderTarget.activeCubeFace = i;\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.source.onended = null;\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar panner = this.panner;\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\tpanner.setPosition( position.x, position.y, position.z );\n\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = - 1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\t\tvar duration = this._clip.duration;\n\t\tvar loop = this.loop;\n\t\tvar loopCount = this._loopCount;\n\n\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\tBufferAttribute.call( this, array, itemSize );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = vec3.length();\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\tthis.y = vec3.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\tvar vector2 = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.line = new Line( geometry, material );\n\tthis.add( this.line );\n\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = this.line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\n\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\n\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\n\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.line.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.line.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v3 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry, coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( length === undefined ) length = 1;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nImageUtils.crossOrigin = undefined;\n\nImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\tvar loader = new TextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\tvar loader = new CubeTextureLoader();\n\tloader.setCrossOrigin( this.crossOrigin );\n\n\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\tif ( mapping ) texture.mapping = mapping;\n\n\treturn texture;\n\n};\n\nImageUtils.loadCompressedTexture = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\nImageUtils.loadCompressedTextureCube = function () {\n\n\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tthis.clear = function () {};\n\tthis.render = function () {};\n\tthis.setClearColor = function () {};\n\tthis.setSize = function () {};\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\nexport { WebGLRenderTargetCube, WebGLRenderTarget, WebGLRenderer, ShaderLib, UniformsLib, UniformsUtils, ShaderChunk, FogExp2, Fog, Scene, Sprite, LOD, SkinnedMesh, Skeleton, Bone, Mesh, LineSegments, LineLoop, Line, Points, Group, VideoTexture, DataTexture, CompressedTexture, CubeTexture, CanvasTexture, DepthTexture, Texture, CompressedTextureLoader, DataTextureLoader, CubeTextureLoader, TextureLoader, ObjectLoader, MaterialLoader, BufferGeometryLoader, DefaultLoadingManager, LoadingManager, JSONLoader, ImageLoader, ImageBitmapLoader, FontLoader, FileLoader, Loader, LoaderUtils, Cache, AudioLoader, SpotLightShadow, SpotLight, PointLight, RectAreaLight, HemisphereLight, DirectionalLightShadow, DirectionalLight, AmbientLight, LightShadow, Light, StereoCamera, PerspectiveCamera, OrthographicCamera, CubeCamera, ArrayCamera, Camera, AudioListener, PositionalAudio, AudioContext, AudioAnalyser, Audio, VectorKeyframeTrack, StringKeyframeTrack, QuaternionKeyframeTrack, NumberKeyframeTrack, ColorKeyframeTrack, BooleanKeyframeTrack, PropertyMixer, PropertyBinding, KeyframeTrack, AnimationUtils, AnimationObjectGroup, AnimationMixer, AnimationClip, Uniform, InstancedBufferGeometry, BufferGeometry, Geometry, InterleavedBufferAttribute, InstancedInterleavedBuffer, InterleavedBuffer, InstancedBufferAttribute, Face3, Object3D, Raycaster, Layers, EventDispatcher, Clock, QuaternionLinearInterpolant, LinearInterpolant, DiscreteInterpolant, CubicInterpolant, Interpolant, Triangle, _Math as Math, Spherical, Cylindrical, Plane, Frustum, Sphere, Ray, Matrix4, Matrix3, Box3, Box2, Line3, Euler, Vector4, Vector3, Vector2, Quaternion, Color, ImmediateRenderObject, VertexNormalsHelper, SpotLightHelper, SkeletonHelper, PointLightHelper, RectAreaLightHelper, HemisphereLightHelper, GridHelper, PolarGridHelper, FaceNormalsHelper, DirectionalLightHelper, CameraHelper, BoxHelper, Box3Helper, PlaneHelper, ArrowHelper, AxesHelper, Shape, Path, ShapePath, Font, CurvePath, Curve, ImageUtils, ShapeUtils, WebGLUtils, WireframeGeometry, ParametricGeometry, ParametricBufferGeometry, TetrahedronGeometry, TetrahedronBufferGeometry, OctahedronGeometry, OctahedronBufferGeometry, IcosahedronGeometry, IcosahedronBufferGeometry, DodecahedronGeometry, DodecahedronBufferGeometry, PolyhedronGeometry, PolyhedronBufferGeometry, TubeGeometry, TubeBufferGeometry, TorusKnotGeometry, TorusKnotBufferGeometry, TorusGeometry, TorusBufferGeometry, TextGeometry, TextBufferGeometry, SphereGeometry, SphereBufferGeometry, RingGeometry, RingBufferGeometry, PlaneGeometry, PlaneBufferGeometry, LatheGeometry, LatheBufferGeometry, ShapeGeometry, ShapeBufferGeometry, ExtrudeGeometry, ExtrudeBufferGeometry, EdgesGeometry, ConeGeometry, ConeBufferGeometry, CylinderGeometry, CylinderBufferGeometry, CircleGeometry, CircleBufferGeometry, BoxGeometry, BoxBufferGeometry, ShadowMaterial, SpriteMaterial, RawShaderMaterial, ShaderMaterial, PointsMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshPhongMaterial, MeshToonMaterial, MeshNormalMaterial, MeshLambertMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshBasicMaterial, LineDashedMaterial, LineBasicMaterial, Material, Float64BufferAttribute, Float32BufferAttribute, Uint32BufferAttribute, Int32BufferAttribute, Uint16BufferAttribute, Int16BufferAttribute, Uint8ClampedBufferAttribute, Uint8BufferAttribute, Int8BufferAttribute, BufferAttribute, ArcCurve, CatmullRomCurve3, CubicBezierCurve, CubicBezierCurve3, EllipseCurve, LineCurve, LineCurve3, QuadraticBezierCurve, QuadraticBezierCurve3, SplineCurve, REVISION, MOUSE, CullFaceNone, CullFaceBack, CullFaceFront, CullFaceFrontBack, FrontFaceDirectionCW, FrontFaceDirectionCCW, BasicShadowMap, PCFShadowMap, PCFSoftShadowMap, FrontSide, BackSide, DoubleSide, FlatShading, SmoothShading, NoColors, FaceColors, VertexColors, NoBlending, NormalBlending, AdditiveBlending, SubtractiveBlending, MultiplyBlending, CustomBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, OneMinusSrcColorFactor, SrcAlphaFactor, OneMinusSrcAlphaFactor, DstAlphaFactor, OneMinusDstAlphaFactor, DstColorFactor, OneMinusDstColorFactor, SrcAlphaSaturateFactor, NeverDepth, AlwaysDepth, LessDepth, LessEqualDepth, EqualDepth, GreaterEqualDepth, GreaterDepth, NotEqualDepth, MultiplyOperation, MixOperation, AddOperation, NoToneMapping, LinearToneMapping, ReinhardToneMapping, Uncharted2ToneMapping, CineonToneMapping, UVMapping, CubeReflectionMapping, CubeRefractionMapping, EquirectangularReflectionMapping, EquirectangularRefractionMapping, SphericalReflectionMapping, CubeUVReflectionMapping, CubeUVRefractionMapping, RepeatWrapping, ClampToEdgeWrapping, MirroredRepeatWrapping, NearestFilter, NearestMipMapNearestFilter, NearestMipMapLinearFilter, LinearFilter, LinearMipMapNearestFilter, LinearMipMapLinearFilter, UnsignedByteType, ByteType, ShortType, UnsignedShortType, IntType, UnsignedIntType, FloatType, HalfFloatType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShort565Type, UnsignedInt248Type, AlphaFormat, RGBFormat, RGBAFormat, LuminanceFormat, LuminanceAlphaFormat, RGBEFormat, DepthFormat, DepthStencilFormat, RGB_S3TC_DXT1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_PVRTC_2BPPV1_Format, RGB_ETC1_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, LoopOnce, LoopRepeat, LoopPingPong, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, ZeroCurvatureEnding, ZeroSlopeEnding, WrapAroundEnding, TrianglesDrawMode, TriangleStripDrawMode, TriangleFanDrawMode, LinearEncoding, sRGBEncoding, GammaEncoding, RGBEEncoding, LogLuvEncoding, RGBM7Encoding, RGBM16Encoding, RGBDEncoding, BasicDepthPacking, RGBADepthPacking, TangentSpaceNormalMap, ObjectSpaceNormalMap, BoxGeometry as CubeGeometry, Face4, LineStrip, LinePieces, MeshFaceMaterial, MultiMaterial, PointCloud, Particle, ParticleSystem, PointCloudMaterial, ParticleBasicMaterial, ParticleSystemMaterial, Vertex, DynamicBufferAttribute, Int8Attribute, Uint8Attribute, Uint8ClampedAttribute, Int16Attribute, Uint16Attribute, Int32Attribute, Uint32Attribute, Float32Attribute, Float64Attribute, ClosedSplineCurve3, SplineCurve3, Spline, AxisHelper, BoundingBoxHelper, EdgesHelper, WireframeHelper, XHRLoader, BinaryTextureLoader, GeometryUtils, Projector, CanvasRenderer, SceneUtils, LensFlare };\n","\"use strict\";\nexports.__esModule = true;\n// Copyright (c) 2018 Chris ter Beke\n// am.js is open source under the terms of LGPLv3 or higher\nvar THREE = require(\"three\");\n/**\n * A factory class for creating camera objects.\n */\nvar CameraFactory = /** @class */ (function () {\n    function CameraFactory() {\n    }\n    /**\n     * Creates a new perspective camera on a target canvas.\n     * @param canvas The canvas to render.\n     */\n    CameraFactory.createPerspectiveCamera = function (canvas) {\n        return new THREE.PerspectiveCamera(60, // field of view\n        canvas.offsetWidth / canvas.offsetHeight, // aspect ratio\n        0.1, // minimum render distance\n        100000 // maximum render distance\n        );\n    };\n    /**\n     * Creates a new orthographic camera on a target canvas.\n     * @param canvas The canvas to render.\n     */\n    CameraFactory.createOrthographicCamera = function (canvas) {\n        return new THREE.OrthographicCamera(canvas.offsetWidth / -2, // top left\n        canvas.offsetWidth / 2, // top right\n        canvas.offsetHeight / 2, // bottom left\n        canvas.offsetHeight / -2, // bottom right\n        1, // minimum render distance\n        100 // maximum render distance\n        );\n    };\n    return CameraFactory;\n}());\nexports[\"default\"] = CameraFactory;\n","\"use strict\";\nexports.__esModule = true;\n// factories\nvar CameraFactory_1 = require(\"./CameraFactory\");\n/**\n * Available camera types.\n */\nvar CAMERA_TYPES;\n(function (CAMERA_TYPES) {\n    CAMERA_TYPES[\"ORTHOGRAPHIC\"] = \"orthographic\";\n    CAMERA_TYPES[\"PERSPECTIVE\"] = \"perspective\";\n})(CAMERA_TYPES = exports.CAMERA_TYPES || (exports.CAMERA_TYPES = {}));\n/**\n * Manages the active camera in the application.\n */\nvar CameraManager = /** @class */ (function () {\n    /**\n     * Creates an instance of CameraManager.\n     * @param {AMJSInterface} application\n     * @memberof CameraManager\n     */\n    function CameraManager(application) {\n        console.debug(application.getUUID(), 'Creating camera manager...');\n        this._application = application;\n    }\n    /**\n     * Get the active camera type.\n     */\n    CameraManager.prototype.getCamera = function () {\n        return this._camera;\n    };\n    /**\n     * Set the active camera type.\n     * Creates a new instance of the selected type and targets it on the canvas.\n     * @param {CAMERA_TYPES} type The camera type to switch to.\n     */\n    CameraManager.prototype.setCameraType = function (type) {\n        var _a;\n        // maps camera type to camera object creation method\n        var cameraTypeToFactoryMap = (_a = {},\n            _a[CAMERA_TYPES.ORTHOGRAPHIC] = CameraFactory_1[\"default\"].createOrthographicCamera,\n            _a[CAMERA_TYPES.PERSPECTIVE] = CameraFactory_1[\"default\"].createPerspectiveCamera,\n            _a);\n        // create the camera and target it at the canvas\n        this._camera = cameraTypeToFactoryMap[type](this._application.getCanvas());\n        // set the 'up' direction in the z-axis\n        this._camera.up.set(0, 0, 1);\n        // TODO: center at build plate\n    };\n    return CameraManager;\n}());\nexports[\"default\"] = CameraManager;\n","\"use strict\";\n// Copyright (c) 2018 Chris ter Beke\n// am.js is open source under the terms of LGPLv3 or higher\nexports.__esModule = true;\n// helpers\nvar generateUUID_1 = require(\"../helpers/generateUUID\");\nvar Signal_1 = require(\"../helpers/Signal\");\n// managers\nvar CameraManager_1 = require(\"./camera/CameraManager\");\n/**\n * The main class that kick-starts an instance of am.js.\n */\nvar AMJS = /** @class */ (function () {\n    /**\n     * Creates an instance of AMJS.\n     * @param {HTMLCanvasElement} canvas\n     * @memberof AMJS\n     */\n    function AMJS(canvas) {\n        // unique generated ID for this instance of am.js.\n        this._UUID = generateUUID_1[\"default\"]();\n        // application config\n        this._config = {\n            debug: true\n        };\n        // signals\n        this.onReady = new Signal_1[\"default\"]();\n        console.debug(this._UUID, 'Creating application instance...');\n        // set the initial canvas element\n        this.setCanvas(canvas);\n    }\n    /**\n     * Initialize the application.\n     */\n    AMJS.prototype.init = function () {\n        // initialize the managers\n        this._cameraManager = new CameraManager_1[\"default\"](this);\n        // indicate that we're ready to roll\n        this.onReady.emit({ success: true });\n    };\n    /**\n     * Get application config.\n     */\n    AMJS.prototype.getConfig = function () {\n        return this._config;\n    };\n    /**\n     * Get application UUID.\n     */\n    AMJS.prototype.getUUID = function () {\n        return this._UUID;\n    };\n    /**\n     * Get the bound canvas element.\n     */\n    AMJS.prototype.getCanvas = function () {\n        return this._canvas;\n    };\n    /**\n     * Bind to a new canvas element.\n     * Will trigger a forced re-render.\n     * @param canvas The canvas element to bind to.\n     */\n    AMJS.prototype.setCanvas = function (canvas) {\n        this._canvas = canvas;\n    };\n    /**\n     * Get the camera manager.\n     */\n    AMJS.prototype.getCameraManager = function () {\n        return this._cameraManager;\n    };\n    return AMJS;\n}());\nexports[\"default\"] = AMJS;\n","\"use strict\";\nexports.__esModule = true;\n// Copyright (c) 2018 Chris ter Beke\n// am.js is open source under the terms of LGPLv3 or higher\nvar AMJS_1 = require(\"./amjs/AMJS\");\nvar canvas = document.getElementById('canvas');\nvar amjs = new AMJS_1[\"default\"](canvas);\namjs.onReady.connect(function (_a) {\n    var success = _a.success;\n    console.log('init success', success);\n});\nconsole.log('amjs', amjs);\namjs.init();\n"]}